{
    "openapi": "3.0.3",
    "info": {
        "title": "Hetzner Cloud API",
        "description": "Copied from the official API documentation for the Public Hetzner Cloud.",
        "contact": {
            "url": "https://docs.hetzner.cloud/"
        },
        "version": "e2cd9bd-dirty"
    },
    "servers": [
        {
            "url": "https://api.hetzner.cloud/v1",
            "description": "Official production server"
        }
    ],
    "paths": {
        "/actions": {
            "get": {
                "summary": "List all Actions",
                "description": "Returns all Action objects. You can sort the results by using the sort URI parameter, and filter them with the status parameter.",
                "operationId": "list_all_actions",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Can be used multiple times, the response will contain only Actions with specified statuses Choices: running success error",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Can be used multiple times Choices: id id:asc id:desc command command:asc command:desc status status:asc status:desc progress progress:asc progress:desc started started:asc started:desc finished finished:asc finished:desc",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TODO"
                    }
                }
            }
        },
        "/actions/{id}": {
            "get": {
                "summary": "Get an Action",
                "description": "Returns a specific Action object.",
                "operationId": "get_action",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Action",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TODO"
                    }
                }
            }
        },
        "/datacenters": {
            "get": {
                "summary": "Get all Datacenters",
                "description": "Returns all Datacenter objects.",
                "operationId": "list_datacenters",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Can be used to filter Datacenters by their name. The response will only contain the Datacenter matching the specified name. When the name does not match the Datacenter name format, an invalid_input error is returned.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TODO"
                    }
                }
            }
        },
        "/datacenters/{id}": {
            "get": {
                "summary": "Get a Datacenter",
                "description": "Returns a specific Datacenter object.",
                "operationId": "get_datacenter",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of Datacenter",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TODO"
                    }
                }
            }
        },
        "/floating_ips": {
            "get": {
                "summary": "Get all Floating IPs",
                "description": "Returns all Floating IP objects.",
                "operationId": "list_floating_ips",
                "parameters": [
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Can be used multiple times. Choices: id id:asc id:desc created created:asc created:desc",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "label_selector",
                        "in": "query",
                        "description": "Can be used to filter Floating IPs by labels. The response will only contain Floating IPs matching the label selector.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Can be used to filter Floating IPs by their name. The response will only contain the Floating IP matching the specified name.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TODO"
                    }
                }
            },
            "post": {
                "summary": "Create a Floating IP",
                "description": "Creates a new Floating IP assigned to a Server. If you want to create a Floating IP that is not bound to a Server, you need to provide the home_location key instead of server. This can be either the ID or the name of the Location this IP shall be created in. Note that a Floating IP can be assigned to a Server in any Location later on. For optimal routing it is advised to use the Floating IP in the same Location it was created in.",
                "operationId": "create_floating_ip",
                "parameters": [],
                "responses": {
                    "201": {
                        "description": "TODO"
                    }
                }
            }
        },
        "/floating_ips/{id}": {
            "get": {
                "summary": "Get a specific Floating IP",
                "description": "Returns a specific Floating IP object.",
                "operationId": "get_specific_floating_ip",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Floating IP",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TODO"
                    }
                }
            },
            "put": {
                "summary": "Update a Floating IP",
                "description": "Updates the description or labels of a Floating IP. Also note that when updating labels, the Floating IP’s current set of labels will be replaced with the labels provided in the request body. So, for example, if you want to add a new label, you have to provide all existing labels plus the new label in the request body.",
                "operationId": "replace_floating_ip",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Floating IP",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TODO"
                    }
                }
            },
            "delete": {
                "summary": "Delete a Floating IP",
                "description": "Deletes a Floating IP. If it is currently assigned to a Server it will automatically get unassigned.",
                "operationId": "delete_floating_ip",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Floating IP",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "TODO"
                    }
                }
            }
        },
        "/floating_ips/{id}/actions": {
            "get": {
                "summary": "Get all Actions for a Floating IP",
                "description": "Returns all Action objects for a Floating IP. You can sort the results by using the sort URI parameter, and filter them with the status parameter.",
                "operationId": "list_actions_for_floating_ip",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Floating IP",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Can be used multiple times, the response will contain only Actions with specified statuses Choices: running success error",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Can be used multiple times Choices: id id:asc id:desc command command:asc command:desc status status:asc status:desc progress progress:asc progress:desc started started:asc started:desc finished finished:asc finished:desc",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TODO"
                    }
                }
            }
        },
        "/floating_ips/{id}/actions/{action_id}": {
            "get": {
                "summary": "Get an Action for a Floating IP",
                "description": "Returns a specific Action object for a Floating IP.",
                "operationId": "get_action_for_floating_ip",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Floating IP",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action_id",
                        "in": "path",
                        "description": "ID of the Action",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TODO"
                    }
                }
            }
        },
        "/floating_ips/{id}/actions/assign": {
            "post": {
                "summary": "Assign a Floating IP to a Server",
                "description": "Assigns a Floating IP to a Server.",
                "operationId": "assign_floating_ip_to_server",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Floating IP",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "TODO"
                    }
                }
            }
        },
        "/floating_ips/{id}/actions/unassign": {
            "post": {
                "summary": "Unassign a Floating IP",
                "description": "Unassigns a Floating IP, resulting in it being unreachable. You may assign it to a Server again at a later time.",
                "operationId": "unassign_floating_ip",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Floating IP",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "TODO"
                    }
                }
            }
        },
        "/floating_ips/{id}/actions/change_dns_ptr": {
            "post": {
                "summary": "Change reverse DNS entry for a Floating IP",
                "description": "Changes the hostname that will appear when getting the hostname belonging to this Floating IP.",
                "operationId": "change_reverse_dns_entry_for_floating_ip",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Floating IP",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "TODO"
                    }
                }
            }
        },
        "/floating_ips/{id}/actions/change_protection": {
            "post": {
                "summary": "Change Floating IP Protection",
                "description": "Changes the protection configuration of the Floating IP.",
                "operationId": "change_floating_ip_protection",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Floating IP",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "TODO"
                    }
                }
            }
        },
        "/images": {
            "get": {
                "summary": "Get all Images",
                "description": "Returns all Image objects. You can select specific Image types only and sort the results by using URI parameters.",
                "operationId": "list_images",
                "parameters": [
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Can be used multiple times. Choices: id id:asc id:desc name name:asc name:desc created created:asc created:desc",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Can be used multiple times. Choices: system snapshot backup",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Can be used multiple times. The response will only contain Images matching the status. Choices: available creating",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "bound_to",
                        "in": "query",
                        "description": "Can be used multiple times. Server ID linked to the Image. Only available for Images of type backup",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Can be used to filter Images by their name. The response will only contain the Image matching the specified name.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "label_selector",
                        "in": "query",
                        "description": "Can be used to filter Images by labels. The response will only contain Images matching the label selector.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TODO"
                    }
                }
            }
        },
        "/images/{id}": {
            "get": {
                "summary": "Get an Image",
                "description": "Returns a specific Image object.",
                "operationId": "get_image",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Image",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TODO"
                    }
                }
            },
            "put": {
                "summary": "Update an Image",
                "description": "Updates the Image. You may change the description, convert a Backup Image to a Snapshot Image or change the Image labels. Only Images of type snapshot and backup can be updated. Note that when updating labels, the current set of labels will be replaced with the labels provided in the request body. So, for example, if you want to add a new label, you have to provide all existing labels plus the new label in the request body.",
                "operationId": "replace_image",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Image to be updated",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TODO"
                    }
                }
            },
            "delete": {
                "summary": "Delete an Image",
                "description": "Deletes an Image. Only Images of type snapshot and backup can be deleted.",
                "operationId": "delete_image",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Image",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "TODO"
                    }
                }
            }
        },
        "/images/{id}/actions": {
            "get": {
                "summary": "Get all Actions for an Image",
                "description": "Returns all Action objects for an Image. You can sort the results by using the sort URI parameter, and filter them with the status parameter.",
                "operationId": "list_actions_for_image",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Image",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Can be used multiple times, the response will contain only Actions with specified statuses Choices: running success error",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Can be used multiple times Choices: id id:asc id:desc command command:asc command:desc status status:asc status:desc progress progress:asc progress:desc started started:asc started:desc finished finished:asc finished:desc",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TODO"
                    }
                }
            }
        },
        "/images/{id}/actions/{action_id}": {
            "get": {
                "summary": "Get an Action for an Image",
                "description": "Returns a specific Action for an Image.",
                "operationId": "get_action_for_image",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Image",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action_id",
                        "in": "path",
                        "description": "ID of the Action",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TODO"
                    }
                }
            }
        },
        "/images/{id}/actions/change_protection": {
            "post": {
                "summary": "Change Image Protection",
                "description": "Changes the protection configuration of the Image. Can only be used on snapshots.",
                "operationId": "change_image_protection",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Image",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "TODO"
                    }
                }
            }
        },
        "/isos": {
            "get": {
                "summary": "Get all ISOs",
                "description": "Returns all available ISO objects.",
                "operationId": "list_isos",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Can be used to filter ISOs by their name. The response will only contain the ISO matching the specified name.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TODO"
                    }
                }
            }
        },
        "/isos/{id}": {
            "get": {
                "summary": "Get an ISO",
                "description": "Returns a specific ISO object.",
                "operationId": "get_iso",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the ISO",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TODO"
                    }
                }
            }
        },
        "/locations": {
            "get": {
                "summary": "Get all Locations",
                "description": "Returns all Location objects.",
                "operationId": "list_locations",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Can be used to filter Locations by their name. The response will only contain the Location matching the specified name.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TODO"
                    }
                }
            }
        },
        "/locations/{id}": {
            "get": {
                "summary": "Get a Location",
                "description": "Returns a specific Location object.",
                "operationId": "get_location",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of Location",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TODO"
                    }
                }
            }
        },
        "/networks": {
            "get": {
                "summary": "Get all Networks",
                "description": "Gets all existing networks that you have available.",
                "operationId": "list_networks",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Can be used to filter networks by their name. The response will only contain the networks matching the specified name.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "label_selector",
                        "in": "query",
                        "description": "Can be used to filter networks by labels. The response will only contain networks with a matching label selector pattern.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TODO"
                    }
                }
            },
            "post": {
                "summary": "Create a Network",
                "description": "Creates a network with the specified ip_range. You may specify one or more subnets. You can also add more Subnets later by using the add subnet action. If you do not specify an ip_range in the subnet we will automatically pick the first available /24 range for you. You may specify one or more routes in routes. You can also add more routes later by using the add route action",
                "operationId": "create_network",
                "parameters": [],
                "responses": {
                    "201": {
                        "description": "TODO"
                    }
                }
            }
        },
        "/networks/{id}": {
            "get": {
                "summary": "Get a Network",
                "description": "Gets a specific network object.",
                "operationId": "get_network",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the network",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TODO"
                    }
                }
            },
            "put": {
                "summary": "Update a Network",
                "description": "Updates the network properties. Note that when updating labels, the network’s current set of labels will be replaced with the labels provided in the request body. So, for example, if you want to add a new label, you have to provide all existing labels plus the new label in the request body. Note: if the network object changes during the request, the response will be a “conflict” error.",
                "operationId": "replace_network",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the network to update",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TODO"
                    }
                }
            },
            "delete": {
                "summary": "Delete a Network",
                "description": "Deletes a network. If there are Servers attached they will be detached in the background. Note: if the network object changes during the request, the response will be a “conflict” error.",
                "operationId": "delete_network",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the network",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "TODO"
                    }
                }
            }
        },
        "/networks/{id}/actions": {
            "get": {
                "summary": "Get all Actions for a Network",
                "description": "Returns all Action objects for a Network. You can sort the results by using the sort URI parameter, and filter them with the status parameter.",
                "operationId": "list_actions_for_network",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Network",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Can be used multiple times, the response will contain only Actions with specified statuses Choices: running success error",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Can be used multiple times Choices: id id:asc id:desc command command:asc command:desc status status:asc status:desc progress progress:asc progress:desc started started:asc started:desc finished finished:asc finished:desc",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TODO"
                    }
                }
            }
        },
        "/networks/{id}/actions/{action_id}": {
            "get": {
                "summary": "Get an Action for a Network",
                "description": "Returns a specific Action for a Network.",
                "operationId": "get_action_for_network",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Network",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action_id",
                        "in": "path",
                        "description": "ID of the Action",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TODO"
                    }
                }
            }
        },
        "/networks/{id}/actions/add_subnet": {
            "post": {
                "summary": "Add a subnet to a Network",
                "description": "Adds a new subnet object to the Network. If you do not specify an ip_range for the subnet we will automatically pick the first available /24 range for you if possible. Note: if the parent Network object changes during the request, the response will be a “conflict” error.",
                "operationId": "add_subnet_to_network",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Network",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "TODO"
                    }
                }
            }
        },
        "/networks/{id}/actions/delete_subnet": {
            "post": {
                "summary": "Delete a subnet from a Network",
                "description": "Deletes a single subnet entry from a Network. You cannot delete subnets which still have Servers attached. If you have Servers attached you first need to detach all Servers that use IPs from this subnet before you can delete the subnet. Note: if the Network object changes during the request, the response will be a “conflict” error.",
                "operationId": "delete_subnet_from_network",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Network",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "TODO"
                    }
                }
            }
        },
        "/networks/{id}/actions/add_route": {
            "post": {
                "summary": "Add a route to a Network",
                "description": "Adds a route entry to a Network. Note: if the Network object changes during the request, the response will be a “conflict” error.",
                "operationId": "add_route_to_network",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Network",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "TODO"
                    }
                }
            }
        },
        "/networks/{id}/actions/delete_route": {
            "post": {
                "summary": "Delete a route from a Network",
                "description": "Delete a route entry from a Network. Note: if the Network object changes during the request, the response will be a “conflict” error.",
                "operationId": "delete_route_from_network",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Network",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "TODO"
                    }
                }
            }
        },
        "/networks/{id}/actions/change_ip_range": {
            "post": {
                "summary": "Change IP range of a Network",
                "description": "Changes the IP range of a Network. IP ranges can only be extended and never shrunk. You can only add IPs at the end of an existing IP range. This means that the IP part of your existing range must stay the same and you can only change its netmask. For example if you have a range 10.0.0.0/16 you want to extend then your new range must also start with the IP 10.0.0.0. Your CIDR netmask /16 may change to a number that is smaller than 16 thereby increasing the IP range. So valid entries would be 10.0.0.0/15, 10.0.0.0/14, 10.0.0.0/13 and so on. After changing the IP range you will have to adjust the routes on your connected Servers by either rebooting them or manually changing the routes to your private Network interface. Note: if the Network object changes during the request, the response will be a “conflict” error.",
                "operationId": "change_ip_range_of_network",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Network",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "TODO"
                    }
                }
            }
        },
        "/networks/{id}/actions/change_protection": {
            "post": {
                "summary": "Change Network Protection",
                "description": "Changes the protection configuration of a Network. Note: if the Network object changes during the request, the response will be a “conflict” error.",
                "operationId": "change_network_protection",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Network",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "TODO"
                    }
                }
            }
        },
        "/pricing": {
            "get": {
                "summary": "Get all prices",
                "description": "Returns prices for all resources available on the platform. VAT and currency of the Project owner are used for calculations. Both net and gross prices are included in the response.",
                "operationId": "list_prices",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "TODO"
                    }
                }
            }
        },
        "/servers": {
            "get": {
                "summary": "Get all Servers",
                "description": "Returns all existing Server objects.",
                "operationId": "list_servers",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Can be used multiple times. The response will only contain Server matching the status. Choices: initializing starting running stopping off deleting rebuilding migrating unknown",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Can be used multiple times. Choices: id id:asc id:desc name name:asc name:desc created created:asc created:desc",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Can be used to filter Servers by their name. The response will only contain the Server matching the specified name.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "label_selector",
                        "in": "query",
                        "description": "Can be used to filter Servers by labels. The response will only contain Servers matching the label selector.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TODO"
                    }
                }
            },
            "post": {
                "summary": "Create a Server",
                "description": "Creates a new Server. Returns preliminary information about the Server as well as an Action that covers progress of creation.",
                "operationId": "create_server",
                "parameters": [],
                "responses": {
                    "201": {
                        "description": "TODO"
                    }
                }
            }
        },
        "/servers/{id}": {
            "get": {
                "summary": "Get a Server",
                "description": "Returns a specific Server object. The Server must exist inside the Project.",
                "operationId": "get_server",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Server",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TODO"
                    }
                }
            },
            "put": {
                "summary": "Update a Server",
                "description": "Updates a Server. You can update a Server’s name and a Server’s labels. Please note that Server names must be unique per Project and valid hostnames as per RFC 1123 (i.e. may only contain letters, digits, periods, and dashes). Also note that when updating labels, the Server’s current set of labels will be replaced with the labels provided in the request body. So, for example, if you want to add a new label, you have to provide all existing labels plus the new label in the request body.",
                "operationId": "replace_server",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Server",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TODO"
                    }
                }
            },
            "delete": {
                "summary": "Delete a Server",
                "description": "Deletes a Server. This immediately removes the Server from your account, and it is no longer accessible.",
                "operationId": "delete_server",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Server",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TODO"
                    }
                }
            }
        },
        "/servers/{id}/metrics": {
            "get": {
                "summary": "Get Metrics for a Server",
                "description": "Get Metrics for specified Server. You must specify the type of metric to get: cpu, disk or network. You can also specify more than one type by comma separation, e.g. cpu,disk. Depending on the type you will get different time series data:",
                "operationId": "get_metrics_for_server",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Server",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Type of metrics to get cpu disk network",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "Start of period to get Metrics for (in ISO-8601 format)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "end",
                        "in": "query",
                        "description": "End of period to get Metrics for (in ISO-8601 format)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "step",
                        "in": "query",
                        "description": "Resolution of results in seconds",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TODO"
                    }
                }
            }
        },
        "/servers/{id}/actions": {
            "get": {
                "summary": "Get all Actions for a Server",
                "description": "Returns all Action objects for a Server. You can sort the results by using the sort URI parameter, and filter them with the status parameter.",
                "operationId": "list_actions_for_server",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Server",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Can be used multiple times, the response will contain only Actions with specified statuses Choices: running success error",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Can be used multiple times Choices: id id:asc id:desc command command:asc command:desc status status:asc status:desc progress progress:asc progress:desc started started:asc started:desc finished finished:asc finished:desc",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TODO"
                    }
                }
            }
        },
        "/servers/{id}/actions/{action_id}": {
            "get": {
                "summary": "Get an Action for a Server",
                "description": "Returns a specific Action object for a Server.",
                "operationId": "get_action_for_server",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Server",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action_id",
                        "in": "path",
                        "description": "ID of the Action",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TODO"
                    }
                }
            }
        },
        "/servers/{id}/actions/poweron": {
            "post": {
                "summary": "Power on a Server",
                "description": "Starts a Server by turning its power on.",
                "operationId": "power_on_server",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Server",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "TODO"
                    }
                }
            }
        },
        "/servers/{id}/actions/reboot": {
            "post": {
                "summary": "Soft-reboot a Server",
                "description": "Reboots a Server gracefully by sending an ACPI request. The Server operating system must support ACPI and react to the request, otherwise the Server will not reboot.",
                "operationId": "soft_reboot_server",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Server",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "TODO"
                    }
                }
            }
        },
        "/servers/{id}/actions/reset": {
            "post": {
                "summary": "Reset a Server",
                "description": "Cuts power to a Server and starts it again. This forcefully stops it without giving the Server operating system time to gracefully stop. This may lead to data loss, it’s equivalent to pulling the power cord and plugging it in again. Reset should only be used when reboot does not work.",
                "operationId": "reset_server",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Server",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "TODO"
                    }
                }
            }
        },
        "/servers/{id}/actions/shutdown": {
            "post": {
                "summary": "Shutdown a Server",
                "description": "Shuts down a Server gracefully by sending an ACPI shutdown request. The Server operating system must support ACPI and react to the request, otherwise the Server will not shut down.",
                "operationId": "shutdown_server",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Server",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "TODO"
                    }
                }
            }
        },
        "/servers/{id}/actions/poweroff": {
            "post": {
                "summary": "Power off a Server",
                "description": "Cuts power to the Server. This forcefully stops it without giving the Server operating system time to gracefully stop. May lead to data loss, equivalent to pulling the power cord. Power off should only be used when shutdown does not work.",
                "operationId": "power_off_server",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Server",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "TODO"
                    }
                }
            }
        },
        "/servers/{id}/actions/reset_password": {
            "post": {
                "summary": "Reset root Password of a Server",
                "description": "Resets the root password. Only works for Linux systems that are running the qemu guest agent. Server must be powered on (state on) in order for this operation to succeed. This will generate a new password for this Server and return it. If this does not succeed you can use the rescue system to netboot the Server and manually change your Server password by hand.",
                "operationId": "reset_root_password_of_server",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Server",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "TODO"
                    }
                }
            }
        },
        "/servers/{id}/actions/enable_rescue": {
            "post": {
                "summary": "Enable Rescue Mode for a Server",
                "description": "Enable the Hetzner Rescue System for this Server. The next time a Server with enabled rescue mode boots it will start a special minimal Linux distribution designed for repair and reinstall. In case a Server cannot boot on its own you can use this to access a Server’s disks. Rescue Mode is automatically disabled when you first boot into it or if you do not use it for 60 minutes. Enabling rescue mode will not reboot your Server — you will have to do this yourself.",
                "operationId": "enable_rescue_mode_for_server",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Server",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "TODO"
                    }
                }
            }
        },
        "/servers/{id}/actions/disable_rescue": {
            "post": {
                "summary": "Disable Rescue Mode for a Server",
                "description": "Disables the Hetzner Rescue System for a Server. This makes a Server start from its disks on next reboot. Rescue Mode is automatically disabled when you first boot into it or if you do not use it for 60 minutes. Disabling rescue mode will not reboot your Server — you will have to do this yourself.",
                "operationId": "disable_rescue_mode_for_server",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Server",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "TODO"
                    }
                }
            }
        },
        "/servers/{id}/actions/create_image": {
            "post": {
                "summary": "Create Image from a Server",
                "description": "Creates an Image (snapshot) from a Server by copying the contents of its disks. This creates a snapshot of the current state of the disk and copies it into an Image. If the Server is currently running you must make sure that its disk content is consistent. Otherwise, the created Image may not be readable. To make sure disk content is consistent, we recommend to shut down the Server prior to creating an Image. You can either create a backup Image that is bound to the Server and therefore will be deleted when the Server is deleted, or you can create an snapshot Image which is completely independent of the Server it was created from and will survive Server deletion. Backup Images are only available when the backup option is enabled for the Server. Snapshot Images are billed on a per GB basis.",
                "operationId": "create_image_from_server",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Server",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "TODO"
                    }
                }
            }
        },
        "/servers/{id}/actions/rebuild": {
            "post": {
                "summary": "Rebuild a Server from an Image",
                "description": "Rebuilds a Server overwriting its disk with the content of an Image, thereby destroying all data on the target Server The Image can either be one you have created earlier (backup or snapshot Image) or it can be a completely fresh system Image provided by us. You can get a list of all available Images with GET /images. Your Server will automatically be powered off before the rebuild command executes.",
                "operationId": "rebuild_server_from_image",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Server",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "TODO"
                    }
                }
            }
        },
        "/servers/{id}/actions/change_type": {
            "post": {
                "summary": "Change the Type of a Server",
                "description": "Changes the type (Cores, RAM and disk sizes) of a Server. Server must be powered off for this command to succeed. This copies the content of its disk, and starts it again. You can only migrate to Server types with the same storage_type and equal or bigger disks. Shrinking disks is not possible as it might destroy data. If the disk gets upgraded, the Server type can not be downgraded any more. If you plan to downgrade the Server type, set upgrade_disk to false.",
                "operationId": "change_type_of_server",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Server",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "TODO"
                    }
                }
            }
        },
        "/servers/{id}/actions/enable_backup": {
            "post": {
                "summary": "Enable and Configure Backups for a Server",
                "description": "Enables and configures the automatic daily backup option for the Server. Enabling automatic backups will increase the price of the Server by 20%. In return, you will get seven slots where Images of type backup can be stored. Backups are automatically created daily.",
                "operationId": "enable_and_configure_backups_for_server",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Server",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "TODO"
                    }
                }
            }
        },
        "/servers/{id}/actions/disable_backup": {
            "post": {
                "summary": "Disable Backups for a Server",
                "description": "Disables the automatic backup option and deletes all existing Backups for a Server. No more additional charges for backups will be made. Caution: This immediately removes all existing backups for the Server!",
                "operationId": "disable_backups_for_server",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Server",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "TODO"
                    }
                }
            }
        },
        "/servers/{id}/actions/attach_iso": {
            "post": {
                "summary": "Attach an ISO to a Server",
                "description": "Attaches an ISO to a Server. The Server will immediately see it as a new disk. An already attached ISO will automatically be detached before the new ISO is attached. Servers with attached ISOs have a modified boot order: They will try to boot from the ISO first before falling back to hard disk.",
                "operationId": "attach_iso_to_server",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Server",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "TODO"
                    }
                }
            }
        },
        "/servers/{id}/actions/detach_iso": {
            "post": {
                "summary": "Detach an ISO from a Server",
                "description": "Detaches an ISO from a Server. In case no ISO Image is attached to the Server, the status of the returned Action is immediately set to success.",
                "operationId": "detach_iso_from_server",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Server",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "TODO"
                    }
                }
            }
        },
        "/servers/{id}/actions/change_dns_ptr": {
            "post": {
                "summary": "Change reverse DNS entry for this Server",
                "description": "Changes the hostname that will appear when getting the hostname belonging to the primary IPs (IPv4 and IPv6) of this Server. Floating IPs assigned to the Server are not affected by this.",
                "operationId": "change_reverse_dns_entry_for_this_server",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Server",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "TODO"
                    }
                }
            }
        },
        "/servers/{id}/actions/change_protection": {
            "post": {
                "summary": "Change Server Protection",
                "description": "Changes the protection configuration of the Server.",
                "operationId": "change_server_protection",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Server",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "TODO"
                    }
                }
            }
        },
        "/servers/{id}/actions/request_console": {
            "post": {
                "summary": "Request Console for a Server",
                "description": "Requests credentials for remote access via VNC over websocket to keyboard, monitor, and mouse for a Server. The provided URL is valid for 1 minute, after this period a new url needs to be created to connect to the Server. How long the connection is open after the initial connect is not subject to this timeout.",
                "operationId": "request_console_for_server",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Server",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "TODO"
                    }
                }
            }
        },
        "/servers/{id}/actions/attach_to_network": {
            "post": {
                "summary": "Attach a Server to a Network",
                "description": "Attaches a Server to a network. This will complement the fixed public Server interface by adding an additional ethernet interface to the Server which is connected to the specified network. The Server will get an IP auto assigned from a subnet of type server in the same network_zone. Using the alias_ips attribute you can also define one or more additional IPs to the Servers. Please note that you will have to configure these IPs by hand on your Server since only the primary IP will be given out by dhcp.",
                "operationId": "attach_server_to_network",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Server",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "TODO"
                    }
                }
            }
        },
        "/servers/{id}/actions/detach_from_network": {
            "post": {
                "summary": "Detach a Server from a Network",
                "description": "Detaches a Server from a network. The interface for this network will vanish.",
                "operationId": "detach_server_from_network",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Server",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "TODO"
                    }
                }
            }
        },
        "/servers/{id}/actions/change_alias_ips": {
            "post": {
                "summary": "Change alias IPs of a Network",
                "description": "Changes the alias IPs of an already attached Network. Note that the existing aliases for the specified Network will be replaced with these provided in the request body. So if you want to add an alias IP, you have to provide the existing ones from the Network plus the new alias IP in the request body.",
                "operationId": "change_alias_ips_of_network",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Server",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "TODO"
                    }
                }
            }
        },
        "/server_types": {
            "get": {
                "summary": "Get all Server Types",
                "description": "Gets all Server type objects.",
                "operationId": "list_server_types",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Can be used to filter Server types by their name. The response will only contain the Server type matching the specified name.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TODO"
                    }
                }
            }
        },
        "/server_types/{id}": {
            "get": {
                "summary": "Get a Server Type",
                "description": "Gets a specific Server type object.",
                "operationId": "get_server_type",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of Server type",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TODO"
                    }
                }
            }
        },
        "/ssh_keys": {
            "get": {
                "summary": "Get all SSH keys",
                "description": "Returns all SSH key objects.",
                "operationId": "list_ssh_keys",
                "parameters": [
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Can be used multiple times. Choices: id id:asc id:desc name name:asc name:desc",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Can be used to filter SSH keys by their name. The response will only contain the SSH key matching the specified name.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fingerprint",
                        "in": "query",
                        "description": "Can be used to filter SSH keys by their fingerprint. The response will only contain the SSH key matching the specified fingerprint.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "label_selector",
                        "in": "query",
                        "description": "Can be used to filter SSH keys by labels. The response will only contain SSH keys matching the label selector.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TODO"
                    }
                }
            },
            "post": {
                "summary": "Create an SSH key",
                "description": "Creates a new SSH key with the given name and public_key. Once an SSH key is created, it can be used in other calls such as creating Servers.",
                "operationId": "create_ssh_key",
                "parameters": [],
                "responses": {
                    "201": {
                        "description": "TODO"
                    }
                }
            }
        },
        "/ssh_keys/{id}": {
            "get": {
                "summary": "Get an SSH key",
                "description": "Returns a specific SSH key object.",
                "operationId": "get_ssh_key",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the SSH key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TODO"
                    }
                }
            },
            "put": {
                "summary": "Update an SSH key",
                "description": "Updates an SSH key. You can update an SSH key name and an SSH key labels. Please note that when updating labels, the SSH key current set of labels will be replaced with the labels provided in the request body. So, for example, if you want to add a new label, you have to provide all existing labels plus the new label in the request body.",
                "operationId": "replace_ssh_key",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the SSH key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TODO"
                    }
                }
            },
            "delete": {
                "summary": "Delete an SSH key",
                "description": "Deletes an SSH key. It cannot be used anymore.",
                "operationId": "delete_ssh_key",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the SSH key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "TODO"
                    }
                }
            }
        },
        "/volumes": {
            "get": {
                "summary": "Get all Volumes",
                "description": "Gets all existing Volumes that you have available.",
                "operationId": "list_volumes",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Can be used multiple times. The response will only contain Volumes matching the status. Choices: available creating",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Can be used multiple times. Choices: id id:asc id:desc name name:asc name:desc created created:asc created:desc",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Can be used to filter Volumes by their name. The response will only contain the Volumes matching the specified name.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "label_selector",
                        "in": "query",
                        "description": "Can be used to filter Volumes by labels. The response will only contain Volumes with a matching label selector pattern.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TODO"
                    }
                }
            },
            "post": {
                "summary": "Create a Volume",
                "description": "Creates a new Volume attached to a Server. If you want to create a Volume that is not attached to a Server, you need to provide the location key instead of server. This can be either the ID or the name of the Location this Volume will be created in. Note that a Volume can be attached to a Server only in the same Location as the Volume itself. Specifying the Server during Volume creation will automatically attach the Volume to that Server after it has been initialized. In that case, the next_actions key in the response is an array which contains a single attach_volume action. The minimum Volume size is 10GB and the maximum size is 10TB (10240GB). A volume’s name can consist of alphanumeric characters, dashes, underscores, and dots, but has to start and end with an alphanumeric character. The total length is limited to 64 characters. Volume names must be unique per Project.",
                "operationId": "create_volume",
                "parameters": [],
                "responses": {
                    "201": {
                        "description": "TODO"
                    }
                }
            }
        },
        "/volumes/{id}": {
            "get": {
                "summary": "Get a Volume",
                "description": "Gets a specific Volume object.",
                "operationId": "get_volume",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the volume",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TODO"
                    }
                }
            },
            "put": {
                "summary": "Update a Volume",
                "description": "Updates the Volume properties. Note that when updating labels, the volume’s current set of labels will be replaced with the labels provided in the request body. So, for example, if you want to add a new label, you have to provide all existing labels plus the new label in the request body.",
                "operationId": "replace_volume",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Volume to update",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TODO"
                    }
                }
            },
            "delete": {
                "summary": "Delete a Volume",
                "description": "Deletes a volume. All Volume data is irreversibly destroyed. The Volume must not be attached to a Server and it must not have delete protection enabled.",
                "operationId": "delete_volume",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Volume",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "TODO"
                    }
                }
            }
        },
        "/volumes/{id}/actions": {
            "get": {
                "summary": "Get all Actions for a Volume",
                "description": "Returns all Action objects for a Volume. You can sort the results by using the sort URI parameter, and filter them with the status parameter.",
                "operationId": "list_actions_for_volume",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Volume",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Can be used multiple times, the response will contain only Actions with specified statuses Choices: running success error",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Can be used multiple times Choices: id id:asc id:desc command command:asc command:desc status status:asc status:desc progress progress:asc progress:desc started started:asc started:desc finished finished:asc finished:desc",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TODO"
                    }
                }
            }
        },
        "/volumes/{id}/actions/{action_id}": {
            "get": {
                "summary": "Get an Action for a Volume",
                "description": "Returns a specific Action for a Volume.",
                "operationId": "get_action_for_volume",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Volume",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action_id",
                        "in": "path",
                        "description": "ID of the Action",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TODO"
                    }
                }
            }
        },
        "/volumes/{id}/actions/attach": {
            "post": {
                "summary": "Attach Volume to a Server",
                "description": "Attaches a Volume to a Server. Works only if the Server is in the same Location as the Volume.",
                "operationId": "attach_volume_to_server",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Volume",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "TODO"
                    }
                }
            }
        },
        "/volumes/{id}/actions/detach": {
            "post": {
                "summary": "Detach Volume",
                "description": "Detaches a Volume from the Server it’s attached to. You may attach it to a Server again at a later time.",
                "operationId": "detach_volume",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Volume",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "TODO"
                    }
                }
            }
        },
        "/volumes/{id}/actions/resize": {
            "post": {
                "summary": "Resize Volume",
                "description": "Changes the size of a Volume. Note that downsizing a Volume is not possible.",
                "operationId": "resize_volume",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Volume to update",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "TODO"
                    }
                }
            }
        },
        "/volumes/{id}/actions/change_protection": {
            "post": {
                "summary": "Change Volume Protection",
                "description": "Changes the protection configuration of a Volume.",
                "operationId": "change_volume_protection",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Volume",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "TODO"
                    }
                }
            }
        }
    }
}